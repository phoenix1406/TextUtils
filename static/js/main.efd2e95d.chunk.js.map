{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","Fragment","className","id","style","color","mode","backgroundColor","border","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Alert","height","alert","concat","role","word","str","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","dist","to","title","aria-label","aria-current","about","placeholder","aria-checked","onClick","toggleMode","htmlFor","textcontent","marginRight","marginLeft","class","onChange","event","toggleColor","currentTarget","value","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","counter","heading","rows","caretColor","length","newtext","preventDefault","showAlert","file","element","document","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","e","textbox","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","App","setAlert","_useState3","_useState4","setMode","_useState5","_useState6","setTextContent","message","setTimeout","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.efd2e95d.chunk.js","sourcesContent":["                import React from 'react'\r\n\r\n                export default function About(props) {\r\n\r\n                    return (\r\n                       \r\n                    <>\r\n                    \r\n                    <h2 className=\"my-6\">About Us</h2>\r\n                    <div className =\"container\" >\r\n                    <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white', border:'2px solid black'}}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}}type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                      Analyze your Text\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} >\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white', border:'2px solid black'}}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\"   style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                     Free To Use\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}}className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} >\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white', border:'2px solid black'}}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\"   style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                      Browser Compatible\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}} className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                    </div>\r\n                    \r\n                    </>\r\n                )\r\n                    }\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n       var str = word.toLowerCase();\r\n        return (str.charAt(0).toUpperCase()+ str.slice(1))\r\n    } \r\n  return (\r\n    <div style ={{height:'75px'}}>\r\n      {props.alert && <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      </div>\r\n      </div>\r\n      }\r\n\r\n   \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n \r\nconst clrStyle={\r\n  marginRight:'0px',\r\n  marginLeft:'auto'\r\n  \r\n}\r\n\r\nconst handleOnChange =(event)=>{\r\n  props.toggleColor(event.currentTarget.value);\r\n}\r\n\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n       \r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n     <input className=\"form-check-input my-3\" aria-checked = \"false\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n     <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.textcontent}  </label>\r\n      </div>\r\n     </div>\r\n    </div>\r\n    <div style = {clrStyle} class =\"my-2 mx-auto\">\r\n   <input type=\"color\" title='Change Background Color'  onChange ={handleOnChange} />\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired,\r\n}\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Textform(props) {\r\n  \r\n  const [text,setText] = useState('');\r\n  \r\n  function download(file, text) {\r\n             \r\n    //creating an invisible element\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href',\r\n    'data:text/plain;charset=utf-8, '\r\n    + encodeURIComponent(text));\r\n    element.setAttribute('download', file);\r\n \r\n    // Above code is equivalent to\r\n    // <a href=\"path of file\" download=\"file name\">\r\n \r\n    document.body.appendChild(element);\r\n    \r\n \r\n    //onClick property\r\n    element.click();\r\n \r\n    document.body.removeChild(element);\r\n}\r\n  \r\n  const handleUpClick = (event)=>{\r\n    if(text.length>0){\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    event.preventDefault();\r\n    props.showAlert('converted to uppercase','success')\r\n    }\r\n  }\r\n  const handleDoClick = (event)=>{\r\n    if(text.length>0){\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    event.preventDefault();\r\n    props.showAlert('converted to downcase','success')\r\n    }\r\n  }\r\n  const removeText = (event)=>{\r\n    if(text.length>0){\r\n    setText('');\r\n    event.preventDefault();\r\n    props.showAlert('Text removed','success')\r\n    }\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    setText(event.currentTarget.value);\r\n   \r\n  }\r\n  let  counter =0;\r\n  const handleDownload =(event)=>{\r\n    if(text.length>0){\r\n       event.preventDefault();\r\n    \r\n    counter=  counter+1;\r\n     let filename = `yourtext${counter}.txt`\r\n    download(filename,text);\r\n    props.showAlert('File Downloaded Successfully','success')\r\n    }\r\n  } \r\n  const handleCopy = (e)=>{\r\n    if(text.length>0){\r\n    e.preventDefault();\r\n    let textbox = document.getElementById('mybox');\r\n    textbox.select();\r\n    navigator.clipboard.writeText(textbox.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert('Copied Text To ClipBoard','success');\r\n  }\r\n}\r\n  \r\n  return (\r\n    <>\r\n   \r\n      <h1 className='my-3' style={{color:props.mode==='dark'?'darkBlue':'black'}}>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n   <textarea className=\"form-control\" id=\"mybox\" rows=\"8\" value = {text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042743':'white',color:props.mode==='dark'?'white':'#042743',caretColor:props.mode==='dark'?'white':'black'}}></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary\" onClick = {handleUpClick}>ConvertToUpperCase</button>\r\n    <button className=\"btn btn-warning\"  onClick ={removeText}>RemoveText</button>\r\n    <button className=\"btn btn-danger\" onClick = {handleDoClick}>ConvertToLowerCase</button>\r\n    <button className=\"btn btn-success\" onClick ={handleDownload}>DownloadText</button>\r\n    <button className=\"btn btn-secondary\" onClick = {handleCopy}>CopyText</button>\r\n\r\n\r\n <div className=\"container my-3\" style = {{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#042743':'white'}}>\r\n  <h1>Your Text Summary</h1>\r\n  <p>{(text.split(\" \")).filter((element)=>{\r\n    return element.length!==0\r\n  }).length} words and {text.length} characters</p>\r\n  <p>{text.split(\" \").filter((element)=>{\r\n    return element.length!==0\r\n  }).length>0?0.008*text.split(\" \").length: 0 } minutes to read</p>\r\n  <h2>preview</h2>\r\n   <p>{text.length>0?text:\"Enter Something in the TextBox to preview it\"}</p>\r\n\r\n </div>\r\n </>\r\n  )\r\n}\r\nTextform.propTypes = {\r\n  heading : PropTypes.string.isRequired,\r\n\r\n}","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar.js';\nimport Textform from './components/Textform.js';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  \n} from \"react-router-dom\";\n\n  function App() {\n    const [alert,setAlert] = useState(null)  \n    const [mode,setMode] = useState(\"light\");\n    \n    const [textcontent, setTextContent] = useState('Enable Dark Mode');\n    \n\n    const toggleColor = (value)=>{\n       \n      \n      document.body.style.backgroundColor= value;\n     }\n    \n    const showAlert =(message,type)=>{\n      setAlert({\n        msg:message,\n         type:type\n\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n    }\n    const toggleMode = ()=>{\n      if(mode==='light'){\n      setMode('dark');\n      showAlert(' Dark Mode has been Enabled','success');\n      setTextContent('Enable Light Mode');\n      document.title = 'TextUtils - DarkMode';\n      // document.body.style.backgroundColor= '#042743';\n\n    }\n    else{\n      setMode('light');\n      showAlert(' Light Mode has been Enabled','success');\n      setTextContent('Enable Dark Mode');\n      // document.body.style.backgroundColor= 'white';\n      document.title='TextUtils - LightMode';\n    }\n  }\n\n    return (\n      <>\n      <Router>\n      <Navbar title = \"Text-Utils\" about =\"About\" mode = {mode} toggleMode={toggleMode}  textcontent= {textcontent} toggleColor={toggleColor} />\n       <Alert alert={alert}/>\n        \n        \n        <Routes>\n          <Route exact  path=\"/about\"\n            element=\n          {\n           <div className=\"container\">\n        \n          <About mode ={mode} showAlert={showAlert} />\n            </div>\n             } \n            />\n            \n         \n          < Route exact path=\"/\" element={\n          <div className=\"container\">\n            <Textform heading = \"Enter the text to analyze below\" mode ={mode} showAlert={showAlert}/>\n        </div>}\n          />\n          \n        </Routes>\n        </Router>\n      </>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}